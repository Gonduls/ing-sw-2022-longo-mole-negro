package it.polimi.ingsw.controller;

import it.polimi.ingsw.messages.events.ChooseColorEvent;
import it.polimi.ingsw.messages.events.GameEventType;
import it.polimi.ingsw.messages.GameEvent;
import it.polimi.ingsw.model.CharacterCardTen;

/**
 * This is the state generated by the card 10 ({@link it.polimi.ingsw.model.CharacterCardTen}).
 * When the CHOOSE_COLOR event is received it sets the color in the card 10. In this turn that color will not count
 * towards the influence.
 */
public class CharacterTenState extends CharacterState{
    GameState nextState;
    CharacterCardTen cc;

    public CharacterTenState(RoundController context, int numberOfEvents, GameState nextState, CharacterCardTen cc) {
        super(context, numberOfEvents);
        this.nextState=nextState;
        this.cc = cc;
    }

    /**
     * @param event The event to check
     * @return true if the event is a CHOOSE_COLOR
     */
    @Override
    public boolean checkValidEvent(GameEvent event) {
        return event.getEventType()== GameEventType.CHOOSE_COLOR;
    }

    /**
     *  It sets the color indicated in the event in the card 10. In this turn that color will not count towards the influence.
     * @param event The event to process.
     */
    @Override
    public void executeEvent(GameEvent event){
        ChooseColorEvent eventCast = (ChooseColorEvent) event;
        cc.setColor(eventCast.getColor());
        numberOfEvents--;
        context.changeState(nextState);
    }
}
