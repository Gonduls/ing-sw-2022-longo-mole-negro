package it.polimi.ingsw.controller;

import it.polimi.ingsw.messages.events.ChooseIslandEvent;
import it.polimi.ingsw.messages.events.GameEventType;
import it.polimi.ingsw.messages.GameEvent;

/**
 *  This is the state generated by the card 8 ({@link it.polimi.ingsw.model.CharacterCardEight}).
 *  The input required by the user is the index of an island. Then calculate the influence on that island.
 *
 */
public class CharacterEightState extends CharacterState{
    GameState nextState;


    public CharacterEightState(RoundController context, int numberOfEvents, GameState nextState) {
        super(context, numberOfEvents);
        this.nextState=nextState;
    }
    /**
     * @param event The event to check
     * @return true if the event is a CHOOSE_ISLAND
     */
    @Override
    public boolean checkValidEvent(GameEvent event) {
        return event.getEventType()== GameEventType.CHOOSE_ISLAND;
    }

    /**
     * It invokes the gameManager method to calculate the influence without movement
     * @param event The event to process.
     */
    @Override
    public void executeEvent(GameEvent event){
        ChooseIslandEvent eventCast = (ChooseIslandEvent) event;

        if (eventCast.getIslandIndex() <0 || eventCast.getIslandIndex()>=context.gameManager.getIslands().size() ){
            throw new IllegalArgumentException("this island doesn't exist");
        }

        context.gameManager.calculateInfluenceWithoutMovement(eventCast.getIslandIndex());
        numberOfEvents--;

        if(numberOfEvents ==0) {
            context.changeState(nextState);
        }

    }
}
