package it.polimi.ingsw.controller;

import it.polimi.ingsw.exceptions.NoSpaceForStudentException;
import it.polimi.ingsw.exceptions.NoSuchStudentException;
import it.polimi.ingsw.messages.events.GameEventType;
import it.polimi.ingsw.messages.events.SwapStudentEntranceTableEvent;
import it.polimi.ingsw.messages.GameEvent;
import it.polimi.ingsw.model.CharacterCard;
import it.polimi.ingsw.model.Player;
/**
 * This is the state generated by the card 3 ({@link it.polimi.ingsw.model.CharacterCardThree}).
 * When the SWAP_STUDENT_ENTRANCE_TABLE is received it swaps the two indicated students from the entrance and the table.
 * This can happen up to three times. If the player decide to terminate the selection in advance it can send the
 * END SELECTION event.
 */
public class CharacterThreeState extends CharacterState{

    GameState nextState;
    CharacterCard charCard;
    public CharacterThreeState(RoundController context, int numberOfEvents, GameState nextState, CharacterCard cc) {
        super(context, numberOfEvents);
        this.nextState=nextState;
        this.charCard=cc;

    }


    @Override
    public boolean checkValidEvent(GameEvent event) {
        return event.getEventType()== GameEventType.SWAP_STUDENT_ENTRANCE_TABLE ||
                event.getEventType()== GameEventType.END_SELECTION;
    }

    @Override
    public void executeEvent(GameEvent event) throws NoSuchStudentException {

        if (event.getEventType() == GameEventType.END_SELECTION){
            context.changeState(nextState);
        } else{
            SwapStudentEntranceTableEvent eventCast = (SwapStudentEntranceTableEvent) event;
            Player player = context.getSeatedPlayers()[eventCast.getPlayerNumber()];

            if (player.getSchool().getStudentsAtEntrance().getStudentByColor(eventCast.getStudentFromEntrance()) ==0)
                throw new NoSuchStudentException("the player doesn't have this student in the entrance");

            if (player.getSchool().getStudentsAtTables().getStudentByColor(eventCast.getStudentFromTable()) ==0)
                throw new NoSuchStudentException("the player doesn't have this student in the table");

            try{
                player.getSchool().getStudentsAtEntrance().moveStudentTo(eventCast.getStudentFromEntrance(), player.getSchool().getStudentsAtTables());
                player.getSchool().getStudentsAtTables().moveStudentTo(eventCast.getStudentFromTable(), player.getSchool().getStudentsAtEntrance());
                context.gameManager.getModelObserver().moveFromEntranceToTable(player.getPlayerNumber(), eventCast.getStudentFromEntrance());
                context.gameManager.getModelObserver().moveStudentFromTableToEntrance(player.getPlayerNumber(), eventCast.getStudentFromTable());
                numberOfEvents--;
            }catch (NoSpaceForStudentException ignored) {
                // in this context this exception is never raised
            }


            if (numberOfEvents == 0){
                context.changeState(nextState);
            }


        }

    }
}
